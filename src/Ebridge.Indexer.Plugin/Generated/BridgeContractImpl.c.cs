// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bridge_contract_impl.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace EBridge.Contracts.Bridge {

  #region Events
  public partial class ReceiptDailyLimitSet : aelf::IEvent<ReceiptDailyLimitSet>
  {
    public global::System.Collections.Generic.IEnumerable<ReceiptDailyLimitSet> GetIndexed()
    {
      return new List<ReceiptDailyLimitSet>
      {
      };
    }

    public ReceiptDailyLimitSet GetNonIndexed()
    {
      return new ReceiptDailyLimitSet
      {
        Symbol = Symbol,
        TargetChainId = TargetChainId,
        ReceiptDailyLimit = ReceiptDailyLimit,
        ReceiptRefreshTime = ReceiptRefreshTime,
        CurrentReceiptDailyLimit = CurrentReceiptDailyLimit,
      };
    }
  }

  public partial class SwapDailyLimitSet : aelf::IEvent<SwapDailyLimitSet>
  {
    public global::System.Collections.Generic.IEnumerable<SwapDailyLimitSet> GetIndexed()
    {
      return new List<SwapDailyLimitSet>
      {
      };
    }

    public SwapDailyLimitSet GetNonIndexed()
    {
      return new SwapDailyLimitSet
      {
        Symbol = Symbol,
        FromChainId = FromChainId,
        SwapDailyLimit = SwapDailyLimit,
        SwapRefreshTime = SwapRefreshTime,
        CurrentSwapDailyLimit = CurrentSwapDailyLimit,
      };
    }
  }

  public partial class ReceiptTokenBucketSet : aelf::IEvent<ReceiptTokenBucketSet>
  {
    public global::System.Collections.Generic.IEnumerable<ReceiptTokenBucketSet> GetIndexed()
    {
      return new List<ReceiptTokenBucketSet>
      {
      };
    }

    public ReceiptTokenBucketSet GetNonIndexed()
    {
      return new ReceiptTokenBucketSet
      {
        Symbol = Symbol,
        TargetChainId = TargetChainId,
        ReceiptCapacity = ReceiptCapacity,
        ReceiptRefillRate = ReceiptRefillRate,
        ReceiptBucketIsEnable = ReceiptBucketIsEnable,
        ReceiptBucketUpdateTime = ReceiptBucketUpdateTime,
        CurrentReceiptBucketTokenAmount = CurrentReceiptBucketTokenAmount,
      };
    }
  }

  public partial class SwapTokenBucketSet : aelf::IEvent<SwapTokenBucketSet>
  {
    public global::System.Collections.Generic.IEnumerable<SwapTokenBucketSet> GetIndexed()
    {
      return new List<SwapTokenBucketSet>
      {
      };
    }

    public SwapTokenBucketSet GetNonIndexed()
    {
      return new SwapTokenBucketSet
      {
        Symbol = Symbol,
        FromChainId = FromChainId,
        SwapCapacity = SwapCapacity,
        SwapRefillRate = SwapRefillRate,
        SwapBucketIsEnable = SwapBucketIsEnable,
        SwapBucketUpdateTime = SwapBucketUpdateTime,
        CurrentSwapBucketTokenAmount = CurrentSwapBucketTokenAmount,
      };
    }
  }

  public partial class ReceiptLimitChanged : aelf::IEvent<ReceiptLimitChanged>
  {
    public global::System.Collections.Generic.IEnumerable<ReceiptLimitChanged> GetIndexed()
    {
      return new List<ReceiptLimitChanged>
      {
      };
    }

    public ReceiptLimitChanged GetNonIndexed()
    {
      return new ReceiptLimitChanged
      {
        Symbol = Symbol,
        TargetChainId = TargetChainId,
        CurrentReceiptDailyLimitAmount = CurrentReceiptDailyLimitAmount,
        ReceiptDailyLimitRefreshTime = ReceiptDailyLimitRefreshTime,
        CurrentReceiptBucketTokenAmount = CurrentReceiptBucketTokenAmount,
        ReceiptBucketUpdateTime = ReceiptBucketUpdateTime,
      };
    }
  }

  public partial class SwapLimitChanged : aelf::IEvent<SwapLimitChanged>
  {
    public global::System.Collections.Generic.IEnumerable<SwapLimitChanged> GetIndexed()
    {
      return new List<SwapLimitChanged>
      {
      };
    }

    public SwapLimitChanged GetNonIndexed()
    {
      return new SwapLimitChanged
      {
        Symbol = Symbol,
        FromChainId = FromChainId,
        CurrentSwapDailyLimitAmount = CurrentSwapDailyLimitAmount,
        SwapDailyLimitRefreshTime = SwapDailyLimitRefreshTime,
        CurrentSwapBucketTokenAmount = CurrentSwapBucketTokenAmount,
        SwapBucketUpdateTime = SwapBucketUpdateTime,
      };
    }
  }

  #endregion
  public static partial class BridgeContractImplContainer
  {
    static readonly string __ServiceName = "BridgeContractImpl.BridgeContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS13.AggregateInput> __Marshaller_acs13_AggregateInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS13.AggregateInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashInput> __Marshaller_GetReceiptHashInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListInput> __Marshaller_GetReceiptHashListInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListOutput> __Marshaller_GetReceiptHashListOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SetMaximumAmountInput> __Marshaller_SetMaximumAmountInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SetMaximumAmountInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.ApproveTransferInput> __Marshaller_ApproveTransferInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.ApproveTransferInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.IsTransferCanReceiveInput> __Marshaller_IsTransferCanReceiveInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.IsTransferCanReceiveInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.ReceiptIdList> __Marshaller_ReceiptIdList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.ReceiptIdList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.CreateSwapInput> __Marshaller_CreateSwapInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.CreateSwapInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SwapTokenInput> __Marshaller_SwapTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SwapTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.ChangeSwapRatioInput> __Marshaller_ChangeSwapRatioInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.ChangeSwapRatioInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.DepositInput> __Marshaller_DepositInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.DepositInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.WithdrawInput> __Marshaller_WithdrawInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.WithdrawInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::CallbackInput> __Marshaller_CallbackInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CallbackInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetSwapIdByTokenInput> __Marshaller_GetSwapIdByTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetSwapIdByTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SwapInfo> __Marshaller_SwapInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SwapInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetSwapPairInfoInput> __Marshaller_GetSwapPairInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetSwapPairInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SwapPairInfo> __Marshaller_SwapPairInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SwapPairInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetSwapAmountsInput> __Marshaller_GetSwapAmountsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetSwapAmountsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SwapAmounts> __Marshaller_SwapAmounts = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SwapAmounts.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetSwappedReceiptInfoInput> __Marshaller_GetSwappedReceiptInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetSwappedReceiptInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SwappedReceiptInfo> __Marshaller_SwappedReceiptInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SwappedReceiptInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.AddTokenInput> __Marshaller_AddTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.AddTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.RemoveTokenInput> __Marshaller_RemoveTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.RemoveTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.CreateReceiptInput> __Marshaller_CreateReceiptInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.CreateReceiptInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SetGasLimitInput> __Marshaller_SetGasLimitInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SetGasLimitInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SetGasPriceInput> __Marshaller_SetGasPriceInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SetGasPriceInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SetRatioInput> __Marshaller_SetRatioInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SetRatioInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int32Value> __Marshaller_google_protobuf_Int32Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int32Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.ReceiptIdInfo> __Marshaller_ReceiptIdInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.ReceiptIdInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.Receipt> __Marshaller_Receipt = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.Receipt.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.TokenSymbolList> __Marshaller_TokenSymbolList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.TokenSymbolList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SetReceiptDailyLimitInput> __Marshaller_BridgeContractImpl_SetReceiptDailyLimitInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SetReceiptDailyLimitInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.SetSwapDailyLimitInput> __Marshaller_BridgeContractImpl_SetSwapDailyLimitInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.SetSwapDailyLimitInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.ConfigReceiptTokenBucketInput> __Marshaller_BridgeContractImpl_ConfigReceiptTokenBucketInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.ConfigReceiptTokenBucketInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.ConfigSwapTokenBucketInput> __Marshaller_BridgeContractImpl_ConfigSwapTokenBucketInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.ConfigSwapTokenBucketInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetReceiptDailyLimitInput> __Marshaller_BridgeContractImpl_GetReceiptDailyLimitInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetReceiptDailyLimitInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.DailyLimitTokenInfo> __Marshaller_BridgeContractImpl_DailyLimitTokenInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.DailyLimitTokenInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetCurrentReceiptTokenBucketStateInput> __Marshaller_BridgeContractImpl_GetCurrentReceiptTokenBucketStateInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetCurrentReceiptTokenBucketStateInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.TokenBucket> __Marshaller_BridgeContractImpl_TokenBucket = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.TokenBucket.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetReceiptMinWaitTimeInSecondsInput> __Marshaller_BridgeContractImpl_GetReceiptMinWaitTimeInSecondsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetReceiptMinWaitTimeInSecondsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EBridge.Contracts.Bridge.GetSwapMinWaitTimeInSecondsInput> __Marshaller_BridgeContractImpl_GetSwapMinWaitTimeInSecondsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EBridge.Contracts.Bridge.GetSwapMinWaitTimeInSecondsInput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS13.AggregateInput, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_Aggregate = new aelf::Method<global::AElf.Standards.ACS13.AggregateInput, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.Action,
        __ServiceName,
        "Aggregate",
        __Marshaller_acs13_AggregateInput,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetReceiptCount = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptCount",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashInput, global::AElf.Types.Hash> __Method_GetReceiptHash = new aelf::Method<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashInput, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptHash",
        __Marshaller_GetReceiptHashInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListInput, global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListOutput> __Method_GetReceiptHashList = new aelf::Method<global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListInput, global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptHashList",
        __Marshaller_GetReceiptHashListInput,
        __Marshaller_GetReceiptHashListOutput);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::EBridge.Contracts.Bridge.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeController = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeController",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeAdmin = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeAdmin",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeTransactionFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeTransactionFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeRestartOrganization = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeRestartOrganization",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangePauseController = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangePauseController",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeApproveTransferController = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeApproveTransferController",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Pause = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Pause",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Restart = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Restart",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetMaximumAmountInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetTokenMaximumAmount = new aelf::Method<global::EBridge.Contracts.Bridge.SetMaximumAmountInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetTokenMaximumAmount",
        __Marshaller_SetMaximumAmountInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.ApproveTransferInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ApproveTransfer = new aelf::Method<global::EBridge.Contracts.Bridge.ApproveTransferInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ApproveTransfer",
        __Marshaller_ApproveTransferInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.IsTransferCanReceiveInput, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsTransferCanReceive = new aelf::Method<global::EBridge.Contracts.Bridge.IsTransferCanReceiveInput, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsTransferCanReceive",
        __Marshaller_IsTransferCanReceiveInput,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetContractController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetContractController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetContractAdmin = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetContractAdmin",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetTransactionFeeRatioController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTransactionFeeRatioController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsContractPause = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsContractPause",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_BoolValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetPauseController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPauseController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetRestartOrganization = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetRestartOrganization",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetTokenMaximumAmount = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenMaximumAmount",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EBridge.Contracts.Bridge.ReceiptIdList> __Method_GetApproveReceiptIdList = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EBridge.Contracts.Bridge.ReceiptIdList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetApproveReceiptIdList",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_ReceiptIdList);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetApproveTransferController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetApproveTransferController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.CreateSwapInput, global::AElf.Types.Hash> __Method_CreateSwap = new aelf::Method<global::EBridge.Contracts.Bridge.CreateSwapInput, global::AElf.Types.Hash>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateSwap",
        __Marshaller_CreateSwapInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SwapTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SwapToken = new aelf::Method<global::EBridge.Contracts.Bridge.SwapTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SwapToken",
        __Marshaller_SwapTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.ChangeSwapRatioInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeSwapRatio = new aelf::Method<global::EBridge.Contracts.Bridge.ChangeSwapRatioInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeSwapRatio",
        __Marshaller_ChangeSwapRatioInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.DepositInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Deposit = new aelf::Method<global::EBridge.Contracts.Bridge.DepositInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Deposit",
        __Marshaller_DepositInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.WithdrawInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Withdraw = new aelf::Method<global::EBridge.Contracts.Bridge.WithdrawInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Withdraw",
        __Marshaller_WithdrawInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::CallbackInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_FulfillQuery = new aelf::Method<global::CallbackInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "FulfillQuery",
        __Marshaller_CallbackInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetSwapIdByTokenInput, global::AElf.Types.Hash> __Method_GetSwapIdByToken = new aelf::Method<global::EBridge.Contracts.Bridge.GetSwapIdByTokenInput, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwapIdByToken",
        __Marshaller_GetSwapIdByTokenInput,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.SwapInfo> __Method_GetSwapInfo = new aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.SwapInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwapInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_SwapInfo);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetSwapPairInfoInput, global::EBridge.Contracts.Bridge.SwapPairInfo> __Method_GetSwapPairInfo = new aelf::Method<global::EBridge.Contracts.Bridge.GetSwapPairInfoInput, global::EBridge.Contracts.Bridge.SwapPairInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwapPairInfo",
        __Marshaller_GetSwapPairInfoInput,
        __Marshaller_SwapPairInfo);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetSwapAmountsInput, global::EBridge.Contracts.Bridge.SwapAmounts> __Method_GetSwapAmounts = new aelf::Method<global::EBridge.Contracts.Bridge.GetSwapAmountsInput, global::EBridge.Contracts.Bridge.SwapAmounts>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwapAmounts",
        __Marshaller_GetSwapAmountsInput,
        __Marshaller_SwapAmounts);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetSwappedReceiptInfoInput, global::EBridge.Contracts.Bridge.SwappedReceiptInfo> __Method_GetSwappedReceiptInfo = new aelf::Method<global::EBridge.Contracts.Bridge.GetSwappedReceiptInfoInput, global::EBridge.Contracts.Bridge.SwappedReceiptInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwappedReceiptInfo",
        __Marshaller_GetSwappedReceiptInfoInput,
        __Marshaller_SwappedReceiptInfo);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Hash> __Method_GetSpaceIdBySwapId = new aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSpaceIdBySwapId",
        __Marshaller_aelf_Hash,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.AddTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddToken = new aelf::Method<global::EBridge.Contracts.Bridge.AddTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddToken",
        __Marshaller_AddTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.RemoveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveToken = new aelf::Method<global::EBridge.Contracts.Bridge.RemoveTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveToken",
        __Marshaller_RemoveTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.CreateReceiptInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreateReceipt = new aelf::Method<global::EBridge.Contracts.Bridge.CreateReceiptInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateReceipt",
        __Marshaller_CreateReceiptInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetGasLimitInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetGasLimit = new aelf::Method<global::EBridge.Contracts.Bridge.SetGasLimitInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetGasLimit",
        __Marshaller_SetGasLimitInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetGasPriceInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetGasPrice = new aelf::Method<global::EBridge.Contracts.Bridge.SetGasPriceInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetGasPrice",
        __Marshaller_SetGasPriceInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetRatioInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetPriceRatio = new aelf::Method<global::EBridge.Contracts.Bridge.SetRatioInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetPriceRatio",
        __Marshaller_SetRatioInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetRatioInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetFeeFloatingRatio = new aelf::Method<global::EBridge.Contracts.Bridge.SetRatioInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetFeeFloatingRatio",
        __Marshaller_SetRatioInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetRatioInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetPriceFluctuationRatio = new aelf::Method<global::EBridge.Contracts.Bridge.SetRatioInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetPriceFluctuationRatio",
        __Marshaller_SetRatioInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_WithdrawTransactionFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "WithdrawTransactionFee",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetGasLimit = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetGasLimit",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetGasPrice = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetGasPrice",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetPriceRatio = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPriceRatio",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetFeeFloatingRatio = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetFeeFloatingRatio",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetFeeByChainId = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetFeeByChainId",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetCurrentTransactionFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentTransactionFee",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int32Value> __Method_GetPriceFluctuationRatio = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int32Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPriceFluctuationRatio",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int32Value);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.ReceiptIdInfo> __Method_GetReceiptIdInfo = new aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.ReceiptIdInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptIdInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_ReceiptIdInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::EBridge.Contracts.Bridge.Receipt> __Method_GetReceiptInfo = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::EBridge.Contracts.Bridge.Receipt>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptInfo",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_Receipt);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::EBridge.Contracts.Bridge.TokenSymbolList> __Method_GetTokenWhitelist = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::EBridge.Contracts.Bridge.TokenSymbolList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenWhitelist",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_TokenSymbolList);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetReceiptDailyLimitInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetReceiptDailyLimit = new aelf::Method<global::EBridge.Contracts.Bridge.SetReceiptDailyLimitInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetReceiptDailyLimit",
        __Marshaller_BridgeContractImpl_SetReceiptDailyLimitInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.SetSwapDailyLimitInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetSwapDailyLimit = new aelf::Method<global::EBridge.Contracts.Bridge.SetSwapDailyLimitInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetSwapDailyLimit",
        __Marshaller_BridgeContractImpl_SetSwapDailyLimitInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.ConfigReceiptTokenBucketInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ConfigReceiptTokenBucket = new aelf::Method<global::EBridge.Contracts.Bridge.ConfigReceiptTokenBucketInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ConfigReceiptTokenBucket",
        __Marshaller_BridgeContractImpl_ConfigReceiptTokenBucketInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.ConfigSwapTokenBucketInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ConfigSwapTokenBucket = new aelf::Method<global::EBridge.Contracts.Bridge.ConfigSwapTokenBucketInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ConfigSwapTokenBucket",
        __Marshaller_BridgeContractImpl_ConfigSwapTokenBucketInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetDailyLimitRefreshTime = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Int64Value, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetDailyLimitRefreshTime",
        __Marshaller_google_protobuf_Int64Value,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetReceiptDailyLimitInput, global::EBridge.Contracts.Bridge.DailyLimitTokenInfo> __Method_GetReceiptDailyLimit = new aelf::Method<global::EBridge.Contracts.Bridge.GetReceiptDailyLimitInput, global::EBridge.Contracts.Bridge.DailyLimitTokenInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptDailyLimit",
        __Marshaller_BridgeContractImpl_GetReceiptDailyLimitInput,
        __Marshaller_BridgeContractImpl_DailyLimitTokenInfo);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.DailyLimitTokenInfo> __Method_GetSwapDailyLimit = new aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.DailyLimitTokenInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwapDailyLimit",
        __Marshaller_aelf_Hash,
        __Marshaller_BridgeContractImpl_DailyLimitTokenInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetDailyLimitRefreshTime = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDailyLimitRefreshTime",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetCurrentReceiptTokenBucketStateInput, global::EBridge.Contracts.Bridge.TokenBucket> __Method_GetCurrentReceiptTokenBucketState = new aelf::Method<global::EBridge.Contracts.Bridge.GetCurrentReceiptTokenBucketStateInput, global::EBridge.Contracts.Bridge.TokenBucket>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentReceiptTokenBucketState",
        __Marshaller_BridgeContractImpl_GetCurrentReceiptTokenBucketStateInput,
        __Marshaller_BridgeContractImpl_TokenBucket);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetReceiptMinWaitTimeInSecondsInput, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetReceiptMinWaitTimeInSeconds = new aelf::Method<global::EBridge.Contracts.Bridge.GetReceiptMinWaitTimeInSecondsInput, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReceiptMinWaitTimeInSeconds",
        __Marshaller_BridgeContractImpl_GetReceiptMinWaitTimeInSecondsInput,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.TokenBucket> __Method_GetCurrentSwapTokenBucketState = new aelf::Method<global::AElf.Types.Hash, global::EBridge.Contracts.Bridge.TokenBucket>(
        aelf::MethodType.View,
        __ServiceName,
        "GetCurrentSwapTokenBucketState",
        __Marshaller_aelf_Hash,
        __Marshaller_BridgeContractImpl_TokenBucket);

    static readonly aelf::Method<global::EBridge.Contracts.Bridge.GetSwapMinWaitTimeInSecondsInput, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetSwapMinWaitTimeInSeconds = new aelf::Method<global::EBridge.Contracts.Bridge.GetSwapMinWaitTimeInSecondsInput, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetSwapMinWaitTimeInSeconds",
        __Marshaller_BridgeContractImpl_GetSwapMinWaitTimeInSecondsInput,
        __Marshaller_google_protobuf_Int64Value);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EBridge.Contracts.Bridge.BridgeContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::AElf.Standards.ACS13.Acs13Reflection.Descriptor.Services[0],
          global::EBridge.Contracts.ReceiptMakerContract.ReceiptMakerReflection.Descriptor.Services[0],
          global::EBridge.Contracts.Bridge.BridgeContractReflection.Descriptor.Services[0],
          global::EBridge.Contracts.Bridge.BridgeContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion
    //
    // /// <summary>Base class for the contract of BridgeContractImpl</summary>
    // public abstract partial class BridgeContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<EBridge.Contracts.Bridge.BridgeContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.StringValue Aggregate(global::AElf.Standards.ACS13.AggregateInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetReceiptCount(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash GetReceiptHash(global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListOutput GetReceiptHashList(global::EBridge.Contracts.ReceiptMakerContract.GetReceiptHashListInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::EBridge.Contracts.Bridge.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeController(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeAdmin(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeTransactionFeeController(global::AuthorityInfo input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeRestartOrganization(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangePauseController(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeApproveTransferController(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Pause(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Restart(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetTokenMaximumAmount(global::EBridge.Contracts.Bridge.SetMaximumAmountInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ApproveTransfer(global::EBridge.Contracts.Bridge.ApproveTransferInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsTransferCanReceive(global::EBridge.Contracts.Bridge.IsTransferCanReceiveInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetContractController(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetContractAdmin(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AuthorityInfo GetTransactionFeeRatioController(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsContractPause(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetPauseController(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetRestartOrganization(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetTokenMaximumAmount(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.ReceiptIdList GetApproveReceiptIdList(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetApproveTransferController(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash CreateSwap(global::EBridge.Contracts.Bridge.CreateSwapInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SwapToken(global::EBridge.Contracts.Bridge.SwapTokenInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeSwapRatio(global::EBridge.Contracts.Bridge.ChangeSwapRatioInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Deposit(global::EBridge.Contracts.Bridge.DepositInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Withdraw(global::EBridge.Contracts.Bridge.WithdrawInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty FulfillQuery(global::CallbackInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash GetSwapIdByToken(global::EBridge.Contracts.Bridge.GetSwapIdByTokenInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.SwapInfo GetSwapInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.SwapPairInfo GetSwapPairInfo(global::EBridge.Contracts.Bridge.GetSwapPairInfoInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.SwapAmounts GetSwapAmounts(global::EBridge.Contracts.Bridge.GetSwapAmountsInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.SwappedReceiptInfo GetSwappedReceiptInfo(global::EBridge.Contracts.Bridge.GetSwappedReceiptInfoInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Hash GetSpaceIdBySwapId(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty AddToken(global::EBridge.Contracts.Bridge.AddTokenInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveToken(global::EBridge.Contracts.Bridge.RemoveTokenInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateReceipt(global::EBridge.Contracts.Bridge.CreateReceiptInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetGasLimit(global::EBridge.Contracts.Bridge.SetGasLimitInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetGasPrice(global::EBridge.Contracts.Bridge.SetGasPriceInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetPriceRatio(global::EBridge.Contracts.Bridge.SetRatioInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetFeeFloatingRatio(global::EBridge.Contracts.Bridge.SetRatioInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetPriceFluctuationRatio(global::EBridge.Contracts.Bridge.SetRatioInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty WithdrawTransactionFee(global::Google.Protobuf.WellKnownTypes.Int64Value input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetGasLimit(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetGasPrice(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetPriceRatio(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetFeeFloatingRatio(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetFeeByChainId(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetCurrentTransactionFee(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int32Value GetPriceFluctuationRatio(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.ReceiptIdInfo GetReceiptIdInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.Receipt GetReceiptInfo(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.TokenSymbolList GetTokenWhitelist(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetReceiptDailyLimit(global::EBridge.Contracts.Bridge.SetReceiptDailyLimitInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetSwapDailyLimit(global::EBridge.Contracts.Bridge.SetSwapDailyLimitInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ConfigReceiptTokenBucket(global::EBridge.Contracts.Bridge.ConfigReceiptTokenBucketInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ConfigSwapTokenBucket(global::EBridge.Contracts.Bridge.ConfigSwapTokenBucketInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetDailyLimitRefreshTime(global::Google.Protobuf.WellKnownTypes.Int64Value input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.DailyLimitTokenInfo GetReceiptDailyLimit(global::EBridge.Contracts.Bridge.GetReceiptDailyLimitInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.DailyLimitTokenInfo GetSwapDailyLimit(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetDailyLimitRefreshTime(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.TokenBucket GetCurrentReceiptTokenBucketState(global::EBridge.Contracts.Bridge.GetCurrentReceiptTokenBucketStateInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetReceiptMinWaitTimeInSeconds(global::EBridge.Contracts.Bridge.GetReceiptMinWaitTimeInSecondsInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EBridge.Contracts.Bridge.TokenBucket GetCurrentSwapTokenBucketState(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetSwapMinWaitTimeInSeconds(global::EBridge.Contracts.Bridge.GetSwapMinWaitTimeInSecondsInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }

    // public static aelf::ServerServiceDefinition BindService(BridgeContractImplBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Aggregate, serviceImpl.Aggregate)
    //       .AddMethod(__Method_GetReceiptCount, serviceImpl.GetReceiptCount)
    //       .AddMethod(__Method_GetReceiptHash, serviceImpl.GetReceiptHash)
    //       .AddMethod(__Method_GetReceiptHashList, serviceImpl.GetReceiptHashList)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_ChangeController, serviceImpl.ChangeController)
    //       .AddMethod(__Method_ChangeAdmin, serviceImpl.ChangeAdmin)
    //       .AddMethod(__Method_ChangeTransactionFeeController, serviceImpl.ChangeTransactionFeeController)
    //       .AddMethod(__Method_ChangeRestartOrganization, serviceImpl.ChangeRestartOrganization)
    //       .AddMethod(__Method_ChangePauseController, serviceImpl.ChangePauseController)
    //       .AddMethod(__Method_ChangeApproveTransferController, serviceImpl.ChangeApproveTransferController)
    //       .AddMethod(__Method_Pause, serviceImpl.Pause)
    //       .AddMethod(__Method_Restart, serviceImpl.Restart)
    //       .AddMethod(__Method_SetTokenMaximumAmount, serviceImpl.SetTokenMaximumAmount)
    //       .AddMethod(__Method_ApproveTransfer, serviceImpl.ApproveTransfer)
    //       .AddMethod(__Method_IsTransferCanReceive, serviceImpl.IsTransferCanReceive)
    //       .AddMethod(__Method_GetContractController, serviceImpl.GetContractController)
    //       .AddMethod(__Method_GetContractAdmin, serviceImpl.GetContractAdmin)
    //       .AddMethod(__Method_GetTransactionFeeRatioController, serviceImpl.GetTransactionFeeRatioController)
    //       .AddMethod(__Method_IsContractPause, serviceImpl.IsContractPause)
    //       .AddMethod(__Method_GetPauseController, serviceImpl.GetPauseController)
    //       .AddMethod(__Method_GetRestartOrganization, serviceImpl.GetRestartOrganization)
    //       .AddMethod(__Method_GetTokenMaximumAmount, serviceImpl.GetTokenMaximumAmount)
    //       .AddMethod(__Method_GetApproveReceiptIdList, serviceImpl.GetApproveReceiptIdList)
    //       .AddMethod(__Method_GetApproveTransferController, serviceImpl.GetApproveTransferController)
    //       .AddMethod(__Method_CreateSwap, serviceImpl.CreateSwap)
    //       .AddMethod(__Method_SwapToken, serviceImpl.SwapToken)
    //       .AddMethod(__Method_ChangeSwapRatio, serviceImpl.ChangeSwapRatio)
    //       .AddMethod(__Method_Deposit, serviceImpl.Deposit)
    //       .AddMethod(__Method_Withdraw, serviceImpl.Withdraw)
    //       .AddMethod(__Method_FulfillQuery, serviceImpl.FulfillQuery)
    //       .AddMethod(__Method_GetSwapIdByToken, serviceImpl.GetSwapIdByToken)
    //       .AddMethod(__Method_GetSwapInfo, serviceImpl.GetSwapInfo)
    //       .AddMethod(__Method_GetSwapPairInfo, serviceImpl.GetSwapPairInfo)
    //       .AddMethod(__Method_GetSwapAmounts, serviceImpl.GetSwapAmounts)
    //       .AddMethod(__Method_GetSwappedReceiptInfo, serviceImpl.GetSwappedReceiptInfo)
    //       .AddMethod(__Method_GetSpaceIdBySwapId, serviceImpl.GetSpaceIdBySwapId)
    //       .AddMethod(__Method_AddToken, serviceImpl.AddToken)
    //       .AddMethod(__Method_RemoveToken, serviceImpl.RemoveToken)
    //       .AddMethod(__Method_CreateReceipt, serviceImpl.CreateReceipt)
    //       .AddMethod(__Method_SetGasLimit, serviceImpl.SetGasLimit)
    //       .AddMethod(__Method_SetGasPrice, serviceImpl.SetGasPrice)
    //       .AddMethod(__Method_SetPriceRatio, serviceImpl.SetPriceRatio)
    //       .AddMethod(__Method_SetFeeFloatingRatio, serviceImpl.SetFeeFloatingRatio)
    //       .AddMethod(__Method_SetPriceFluctuationRatio, serviceImpl.SetPriceFluctuationRatio)
    //       .AddMethod(__Method_WithdrawTransactionFee, serviceImpl.WithdrawTransactionFee)
    //       .AddMethod(__Method_GetGasLimit, serviceImpl.GetGasLimit)
    //       .AddMethod(__Method_GetGasPrice, serviceImpl.GetGasPrice)
    //       .AddMethod(__Method_GetPriceRatio, serviceImpl.GetPriceRatio)
    //       .AddMethod(__Method_GetFeeFloatingRatio, serviceImpl.GetFeeFloatingRatio)
    //       .AddMethod(__Method_GetFeeByChainId, serviceImpl.GetFeeByChainId)
    //       .AddMethod(__Method_GetCurrentTransactionFee, serviceImpl.GetCurrentTransactionFee)
    //       .AddMethod(__Method_GetPriceFluctuationRatio, serviceImpl.GetPriceFluctuationRatio)
    //       .AddMethod(__Method_GetReceiptIdInfo, serviceImpl.GetReceiptIdInfo)
    //       .AddMethod(__Method_GetReceiptInfo, serviceImpl.GetReceiptInfo)
    //       .AddMethod(__Method_GetTokenWhitelist, serviceImpl.GetTokenWhitelist)
    //       .AddMethod(__Method_SetReceiptDailyLimit, serviceImpl.SetReceiptDailyLimit)
    //       .AddMethod(__Method_SetSwapDailyLimit, serviceImpl.SetSwapDailyLimit)
    //       .AddMethod(__Method_ConfigReceiptTokenBucket, serviceImpl.ConfigReceiptTokenBucket)
    //       .AddMethod(__Method_ConfigSwapTokenBucket, serviceImpl.ConfigSwapTokenBucket)
    //       .AddMethod(__Method_SetDailyLimitRefreshTime, serviceImpl.SetDailyLimitRefreshTime)
    //       .AddMethod(__Method_GetReceiptDailyLimit, serviceImpl.GetReceiptDailyLimit)
    //       .AddMethod(__Method_GetSwapDailyLimit, serviceImpl.GetSwapDailyLimit)
    //       .AddMethod(__Method_GetDailyLimitRefreshTime, serviceImpl.GetDailyLimitRefreshTime)
    //       .AddMethod(__Method_GetCurrentReceiptTokenBucketState, serviceImpl.GetCurrentReceiptTokenBucketState)
    //       .AddMethod(__Method_GetReceiptMinWaitTimeInSeconds, serviceImpl.GetReceiptMinWaitTimeInSeconds)
    //       .AddMethod(__Method_GetCurrentSwapTokenBucketState, serviceImpl.GetCurrentSwapTokenBucketState)
    //       .AddMethod(__Method_GetSwapMinWaitTimeInSeconds, serviceImpl.GetSwapMinWaitTimeInSeconds).Build();
    // }

  }
}
#endregion

